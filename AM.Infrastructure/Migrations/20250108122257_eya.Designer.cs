// <auto-generated />
using System;
using AM.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AM.Infrastructure.Migrations
{
    [DbContext(typeof(AMContext))]
    [Migration("20250108122257_eya")]
    partial class eya
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AM.ApplicationCore.Domain.Abonne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Abonnes");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Categorie", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Code");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Livre", b =>
                {
                    b.Property<int>("LivreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LivreId"));

                    b.Property<string>("Auteur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CategorieFk")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NbrExemplaires")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("LivreId");

                    b.HasIndex("CategorieFk");

                    b.ToTable("livres");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.PretLivre", b =>
                {
                    b.Property<int>("AbonneFk")
                        .HasColumnType("int");

                    b.Property<int>("LivreFk")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AbonneFk", "LivreFk", "DateDebut");

                    b.HasIndex("LivreFk");

                    b.ToTable("prets");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Livre", b =>
                {
                    b.HasOne("AM.ApplicationCore.Domain.Categorie", "Mycategorie")
                        .WithMany("livres")
                        .HasForeignKey("CategorieFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mycategorie");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.PretLivre", b =>
                {
                    b.HasOne("AM.ApplicationCore.Domain.Abonne", "MyAbonne")
                        .WithMany("Prets")
                        .HasForeignKey("AbonneFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AM.ApplicationCore.Domain.Livre", "MyLivre")
                        .WithMany("prets")
                        .HasForeignKey("LivreFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyAbonne");

                    b.Navigation("MyLivre");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Abonne", b =>
                {
                    b.Navigation("Prets");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Categorie", b =>
                {
                    b.Navigation("livres");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Livre", b =>
                {
                    b.Navigation("prets");
                });
#pragma warning restore 612, 618
        }
    }
}
